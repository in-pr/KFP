<?xml version="1.0" encoding="UTF-8"?>
<project name="KFP-POS-task1" basedir=".">

	<!-- defines variables and files used during the rest of this script -->

	<property file="application.properties" prefix="app" />

	<property name="build.dir" value="${basedir}/build" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="jar.dir" value="${build.dir}/jar" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="src.dir" value="${basedir}/src" />

	<property name="test.classes.dir" value="${build.dir}/tests" />
	<property name="test.src.dir" value="${basedir}/test" />

	<property name="main.class" value="ee.ut.math.tvt.kungfupandas.Intro" />

	<!-- database variables -->

	<property name="data.dir" value="${basedir}/data" />
	<property name="db.file" value="${data.dir}/POSdb" />
	<property name="db.alias" value="POS" />
	<property name="db.url" value="jdbc:hsqldb:hsql://localhost/POS" />

	<!-- defines classpath variants used for different tasks -->

	<path id="compile.classpath">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<path id="run.classpath">
		<pathelement location="${classes.dir}" />
		<path refid="compile.classpath" />
	</path>

	<path id="test.classpath">
		<pathelement location="${test.classes.dir}" />
		<path refid="run.classpath" />
	</path>

	<!-- defines macros -->

	<macrodef name="git">
		<attribute name="command" />
		<attribute name="dir" default="" />
		<element name="args" optional="true" />
		<sequential>
			<echo message="git @{command}" />
			<exec executable="git" dir="@{dir}">
				<arg value="@{command}" />
				<args />
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="copyconfig">
		<sequential>
			<mkdir dir="${build.dir}" />
			<mkdir dir="${classes.dir}" />
			<copy file="${src.dir}/log4j.properties" todir="${classes.dir}" overwrite="true" />
			<copy file="${src.dir}/hibernate.cfg.xml" todir="${classes.dir}" overwrite="true" />
		</sequential>
	</macrodef>

	<!-- defines runnable ant targets -->

	<target name="clean" description="Removes the files created during the previous build.">
		<delete dir="${build.dir}" />
	</target>

	<target name="build" description="Compiles the source code and sets log4j and other files in the right places.">
		<copyconfig />
		<javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="compile.classpath" includeantruntime="false" />
	</target>

	<target name="run" depends="build" description="Executes your application via class Intro.">
		<java classname="${main.class}" classpathref="run.classpath" fork="yes">
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
		</java>
	</target>

	<target name="dist" depends="build" description="Creates in the folder build/jar a separate JAR file.">
		<mkdir dir="${jar.dir}" />
		<propertyfile file="version.properties" comment="version properties">
			<entry key="build.revision.number" type="int" default="0" operation="+" />
		</propertyfile>
		<jar jarfile="${build.dir}/jar/${app.team.name}.jar" basedir="${build.dir}/classes">
			<manifest>
				<attribute name="Main-Class" value="${main.class}" />
			</manifest>
			<fileset dir="${basedir}" includes="*.properties ${app.team.logo}" />
			<zipgroupfileset dir="lib" includes="**/*.jar" />
		</jar>
	</target>

	<target name="jrun" description="Opens your intro window using the JAR file created by dist ANT target.">
		<java jar="${jar.dir}/${app.team.name}.jar" fork="yes" />
	</target>

	<target name="runc" depends="build" description="Runs the application (from console).">
		<java classname="${main.class}" classpathref="run.classpath" fork="yes">
			<arg value="console" />
		</java>
	</target>

	<target name="git_commit" description="Makes a commit to the local repository and pushes changes to GitHub.">
		<input message="Commit message" addproperty="commit-message" />
		<git command="add">
			<args>
				<arg value="-A" />
			</args>
		</git>
		<git command="commit">
			<args>
				<arg value="-m ${commit-message}" />
			</args>
		</git>
		<input message="User name: " addproperty="USERNAME" />
		<input message="Password: " addproperty="PASSWORD" />
		<git command="push">
			<args>
				<arg value="https://${USERNAME}:${PASSWORD}@github.com/in-pr/KFP.git" />
			</args>
		</git>
	</target>

	<target name="git_tag" description="Creates the corresponding tag and synchronizes it to GitHub.">
		<input message="Tag name: " addproperty="tag_name" />
		<input message="Tag comment: " addproperty="tag_comment" />
		<git command="tag">
			<args>
				<arg value="-a" />
				<arg value="${tag_name}" />
				<arg value="-m" />
				<arg value="${tag_comment}" />
			</args>
		</git>
		<input message="User name: " addproperty="USERNAME" />
		<input message="Password: " addproperty="PASSWORD" />
		<git command="push">
			<args>
				<arg value="--tags" />
				<arg value="https://${USERNAME}:${PASSWORD}@github.com/in-pr/KFP.git" />
			</args>
		</git>
	</target>

	<target name="dbmanager" description="Starts the HSQLDB manager.">
		<java classname="org.hsqldb.util.DatabaseManagerSwing" classpathref="run.classpath" fork="yes">
			<arg line="--user sa --url ${db.url}" />
		</java>
	</target>

	<target name="startdb" description="Starts the HSQLDB with default parameters.">
		<java classname="org.hsqldb.Server" classpathref="run.classpath" fork="yes">
			<arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" />
		</java>
	</target>

	<target name="build-tests" depends="build" description="Compiles unit tests.">
		<mkdir dir="${test.classes.dir}" />
		<javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" classpathref="run.classpath" includeantruntime="false" />
	</target>

	<target name="test" depends="build-tests" description="Runs unit tests.">
		<junit>
			<classpath refid="test.classpath" />
			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${test.classes.dir}" includes="**/*.class" />
			</batchtest>
		</junit>
	</target>

</project>
